@page "/DataGridTradingJournal"
@inject HttpClient Http
@inject DialogService DialogService
@inject NavigationManager NavigationManager;
@if (oPositionVM == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div style="display: flex; align-items: center; margin-bottom: 16px">
        <div style="white-space:nowrap; margin-right: 16px">ExpandMode:</div>
        <RadzenSelectBar @bind-Value="@expandMode" TextProperty="Text" ValueProperty="Value" style="margin-right: 16px"
                         Data="@(Enum.GetValues(typeof(DataGridExpandMode)).Cast<DataGridExpandMode>().Select(t => new { Text = $"{t}", Value = t }))" Size="ButtonSize.Small" />
        <RadzenButton Text="Expand all rows" Click="@(args => ToggleRowsExpand(true))" style="margin-right: 16px"
                      Disabled=@(allRowsExpanded == true || expandMode == DataGridExpandMode.Single) />
        <RadzenButton Text="Collapse all rows" Click="@(args => ToggleRowsExpand(false))" style="margin-right: 16px"
                      Disabled=@(allRowsExpanded == false || expandMode == DataGridExpandMode.Single) />

        <RadzenButton Text="Online Position" Click="@(args => onlinePositionTransaction())" />
    </div>



    <RadzenDataGrid @ref="grid" Data="@oPositionVM" TItem="OptionPositionVM" AllowFiltering="true" AllowPaging="true" PageSize="5" AllowSorting="true" RowRender="@RowRender" ExpandMode="@expandMode">

        <Template Context="OptionPositionVM2">
            <RadzenTabs>
                <Tabs>
                    <RadzenDataGrid AllowFiltering="true" AllowPaging="true" AllowSorting="true" Data="@OptionPositionVM2.optionTransactionDetalis" TItem="optionTransactionDetalisVM">
                        <Columns>
                            <RadzenDataGridColumn TItem="optionTransactionDetalisVM" Property="InstrumentName" Title="InstrumentName" />
                            <RadzenDataGridColumn TItem="optionTransactionDetalisVM" Property="Amount" Title="Amount" />
                            <RadzenDataGridColumn TItem="optionTransactionDetalisVM" Property="IndexPrice" Title="IndexPrice" />
                            <RadzenDataGridColumn TItem="optionTransactionDetalisVM" Property="Price" Title="Price" />
                            <RadzenDataGridColumn TItem="optionTransactionDetalisVM" Property="Description" Title="Description" />

                            <RadzenDataGridColumn TItem="optionTransactionDetalisVM" Property="" Title="">
                                <Template Context="optionTransactionDetalisVM">
                                    <RadzenButton Text="Dialog " ButtonStyle="ButtonStyle.Light" Click="ShowInlineDialog">

                                        Edit
                                        @{
                                            IDTransaction = optionTransactionDetalisVM.TransactionLogId;
                                            TitelTransaction = optionTransactionDetalisVM.InstrumentName;
                                            DescriptionTransaction = optionTransactionDetalisVM.Description;
                                        }
                                    </RadzenButton>
                                </Template>
                            </RadzenDataGridColumn>
                        </Columns>
                    </RadzenDataGrid>
                </Tabs>
            </RadzenTabs>
        </Template>

        <Columns>
            <RadzenDataGridColumn TItem="OptionPositionVM" Property="InstrumentName" Title="Instrument Name" Width="180px" />
            <RadzenDataGridColumn TItem="OptionPositionVM" Property="Size" Title="size" Width="50px" />
            <RadzenDataGridColumn TItem="OptionPositionVM" Property="AveragePrice" Title="Average Price" Width="120px" />
            <RadzenDataGridColumn TItem="OptionPositionVM" Property="MarkPrice" Title="MarkPrice" Width="120px" />
            <RadzenDataGridColumn TItem="OptionPositionVM" Property="FloatingProfitLossUsd" Title="FloatingProfitLossUsd" Width="120px" />
  
            <RadzenDataGridColumn TItem="OptionPositionVM" Property="Description" Title="Description" Width="120px" />
 
            <RadzenDataGridColumn TItem="OptionPositionVM" Property="" Title="" Width="120px">
                <Template Context="OptionPositionVM">

                    <RadzenButton Text="Dialog " ButtonStyle="ButtonStyle.Primary" Click="ShowInlineDialogPosition"> 
                        Edit
                        @{
                            IDPosition = OptionPositionVM.optionPositionId;
                            TitelPosition = OptionPositionVM.InstrumentName;
                            DescriptionPosition = OptionPositionVM.Description;
                        }
                    </RadzenButton>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
}


@code {
    long IDTransaction;
     string TitelTransaction = "";
    string DescriptionTransaction = "";

    async Task ShowInlineDialog()
    {
        
        long IDTransaction2;
       string textareaTransaction;

        var result = await DialogService.OpenAsync(TitelTransaction, ds =>
    @<RadzenStack Gap="1.5rem">

        @{textareaTransaction = null;}
        <textarea rows='5' cols='50' @bind=textareaTransaction> @DescriptionTransaction    </textarea>

        <RadzenStack Orientation="Orientation.Horizontal" Gap="0.5rem" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
            <RadzenStack Orientation="Orientation.Horizontal">
                <template>
                    @{IDTransaction2 = IDTransaction;}
                </template>
                <RadzenButton Text="Ok" Click="() =>    EditDescriptionTransaction(IDTransaction2,textareaTransaction)" Style="width: 80px;" />
                <RadzenButton Text="Cancel" Click="() => ds.Close(false)" ButtonStyle="ButtonStyle.Light" />
            </RadzenStack>
        </RadzenStack>
    </RadzenStack>);
    } 
    int IDPosition;
    int IDPosition2;
    string DescriptionPosition = "";
    string TitelPosition = "";
    public string textareaPosition;

    async Task ShowInlineDialogPosition()
    {
        var result = await DialogService.OpenAsync(TitelPosition, ds =>
    @<RadzenStack Gap="1.5rem">

        @{textareaPosition = null;}
        <textarea rows='5' cols='50' @bind=textareaPosition> @DescriptionPosition    </textarea>
        <RadzenStack Orientation="Orientation.Horizontal" Gap="0.5rem" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
            <RadzenStack Orientation="Orientation.Horizontal">
                <template>
                    @{IDPosition2 = IDPosition;}
                </template>
                <RadzenButton Text="Ok" Click="() =>    EditDescriptionPosition(IDPosition2,textareaPosition)" Style="width: 80px;" />
                <RadzenButton Text="Cancel" Click="() => ds.Close(false)" ButtonStyle="ButtonStyle.Light" />
            </RadzenStack>
        </RadzenStack>
    </RadzenStack>);
    } 
}